var colorMap=["#020202","#000000","#999999","#ffffff"],levels=[],currentLevel=0,wdx,wdy,ww,wh,maxColors=26,scoreHeight,score={current:10,max:20,row:[]};function setup(){ww=windowWidth;wh=windowHeight;createCanvas(ww,ww);levels[0]=createLevel(6,8)}
function createLevel(a,b){var c=constructProblem(a,b);const d=70+round(random(20));for(var f=4;f<=maxColors;f++)colorMap[f]=color("hsl("+floor(360/maxColors*f)+", "+d+"%, "+(30+10*f%70)+"%)");c={lanes:c,score:{current:round(maxColors/4),max:maxColors,row:[]}};checkLanes(c);c.score.current=0;c.done&&(c=createLevel(a,b));return c}
function constructProblem(a,b){const c=maxColors;for(var d=0;900>d;d++){maxColors=c;for(var f=[],e=0;e<b;e++){for(var g=[],h=0;h<a;h++)g[h]={num:1,color:1};f.push(g)}e=!0;if(constructNextMatch(f,a,b,4))break;e=!1}e||console.log("not possible");return f}function constructNextMatch(a,b,c,d){if(d>maxColors)return!0;var f=[{},{}];if(!tryfindTwinSpot(a,b,c,f))return logMatrix(a),!1;insertTiles(a,f,d);shiftTiles(a,b,c,f);return constructNextMatch(a,b,c,d+1)}
function tryfindTwinSpot(a,b,c,d){for(var f=[],e=0;e<c;e++)for(var g=0;g<b;g++)1==a[e][g].num&&(e+1<c&&1==a[e+1][g].num&&f.push([{x:e,y:g},{x:e+1,y:g}]),g+1<b&&1==a[e][g+1].num&&f.push([{x:e,y:g},{x:e,y:g+1}]));if(0==f.length)return!1;a=f[floor(random(f.length))];d[0]=a[0];d[1]=a[1];return!0}function insertTiles(a,b,c){a[b[0].x][b[0].y]={color:c,num:c};a[b[1].x][b[1].y]={color:c,num:c}}
function shiftTiles(a,b,c,d){d[0].x==d[1].x?arrayRotateRowNum(a,d[0].y,floor(1+random(b-2))):d[0].y==d[1].y&&arrayRotateColNum(a[d[0].x],floor(1+random(c-2)))}function logMatrix(a){var b=0;console.log("vvvvvvvvvvvvvvvvvvvvvvvv");for(var c=0;c<a[0].length;c++){for(var d="",f=0;f<a.length;f++)d+=" "+String(a[f][c].num).padStart(2,"0");console.log(b+d);b++}console.log("^^^^^^^^^^^^^^^^^^^^^^^^");console.log("              ")}
function removeColor(a){for(var b=0;b<a.lanes.length;b++)for(var c=a.lanes[b],d=0;d<c.length;d++)if(2<c[d].color){c[d].color=2;return}}function refillColor(a){for(var b=0;b<a.lanes.length;b++)for(var c=a.lanes[b],d=0;d<c.length;d++)if(2==c[d].color){c[d].color=c[d].num;return}}function shuffle(a){return a.sort(()=>Math.random()-.5)}
function drawLevel(a){wdx=window.innerWidth/a.lanes.length;scoreHeight=.96*window.innerHeight;wdy=.95*window.innerHeight/a.lanes[0].length;for(var b=0;b<a.lanes.length;b++)lanePosX==b?drawLane(b,a.lanes.length,laneDX,laneDY,a.lanes[b]):drawLane(b,a.lanes.length,laneDX,0,a.lanes[b]);drawScore(a.score)}
function drawScore(a){for(var b=0;b<a.max;b++){var c=3+b*window.innerWidth/a.max,d=scoreHeight;a.current>b&&(fill(0,0,0,80),rect(c+.06*window.innerWidth/a.max,d+.06*window.innerWidth/a.max,.8*window.innerWidth/a.max,.02*window.innerWidth,2),fill(colorMap[4+b%(maxColors-4)]),rect(c+0*window.innerWidth/a.max,d,.8*window.innerWidth/a.max,.02*window.innerWidth,2))}}
function drawLane(a,b,c,d,f){for(var e=0;e<f.length;e++){var g=0;e==lanePosY&&(g=c);drawBrick(a,e,g,d,f[e]);0<d&&drawBrick(a,e,0,-f.length*wdy+d,f[e]);0>d&&drawBrick(a,e,0,f.length*wdy+d,f[e]);0<g&&drawBrick(a,e,-b*wdx+g,0,f[e]);0>g&&drawBrick(a,e,b*wdx+g,0,f[e])}}function drawBrick(a,b,c,d,f){col=color(colorMap[f.color]);noStroke();fill(col);rect(a*wdx+c+2,b*wdy+d+2,wdx-4,wdy-4,5)}function draw(){resizeCanvas(windowWidth,windowHeight);background(colorMap[0]);drawLevel(levels[currentLevel])}
function windowResized(){resizeCanvas(windowWidth,windowHeight)}var mousepos={x:-1,y:-1};function arrayRotateColNum(a,b){for(var c=0;c<b;c++)a=arrayRotateCol(a,!1);return a}function arrayRotateCol(a,b){b?a.unshift(a.pop()):a.push(a.shift());return a}function arrayRotateRowNum(a,b,c){for(var d=0;d<c;d++)a=arrayRotateRow(a,b,!1);return a}
function arrayRotateRow(a,b,c){if(c){c=a[a.length-1][b];for(var d=0;d<a.length;d++){var f=a[d][b];a[d][b]=c;c=f}}else for(c=a[0][b],d=a.length-1;0<=d;d--)f=a[d][b],a[d][b]=c,c=f;return a}
function checkLanes(a){for(var b=a.lanes,c=!0,d=0;d<b.length;d++)for(var f=b[d][0].num,e=1;e<b[d].length;e++){var g=b[d][e].num;1<g&&(f==g?(a.score.row.push(b[d][e].num),b[d][e-1]={color:1,num:1},b[d][e]={color:1,num:1},a.score.current+=3,refillColor(a),refillColor(a),refillColor(a)):c=!1);f=g}for(e=0;e<b[0].length;e++)for(f=b[0][e].num,d=1;d<b.length;d++)g=b[d][e].num,1<g&&(f==g?(a.score.row.push(b[d][e].num),b[d-1][e]={color:1,num:1},b[d][e]={color:1,num:1},a.score.current+=3,refillColor(a),refillColor(a),
refillColor(a)):c=!1),f=g;a.done=c}var laneDX=0,laneDY=0,lanePosX=0,lanePosY=0;function touchStarted(a){mousepos.x=mouseX;mousepos.y=mouseY;resizeCanvas(windowWidth,windowHeight);a.preventDefault()}function touchMoved(){laneDX=mouseX-mousepos.x;laneDY=mouseY-mousepos.y;abs(laneDX)>abs(laneDY)?laneDY=0:laneDX=0;lanePosX=floor(mousepos.x/wdx);lanePosY=floor(mousepos.y/wdy);round(laneDX/wdx);round(laneDY/wdy)}
function touchEnded(){const a=round((mouseX-mousepos.x)/wdx),b=round((mouseY-mousepos.y)/wdy);if(0!=a||0!=b)levels[currentLevel].score.current-=2;if(abs(a)>abs(b)){if(0>a)for(var c=0;c<-a;c++)arrayRotateRow(levels[currentLevel].lanes,lanePosY,!1);if(0<a)for(c=0;c<a;c++)arrayRotateRow(levels[currentLevel].lanes,lanePosY,!0)}else{if(0>b)for(c=0;c<-b;c++)arrayRotateCol(levels[currentLevel].lanes[lanePosX],!1);if(0<b)for(c=0;c<b;c++)arrayRotateCol(levels[currentLevel].lanes[lanePosX],!0)}laneDY=laneDX=
0;checkLanes(levels[currentLevel]);levels[currentLevel].done&&(levels[currentLevel]=createLevel(6,8))}function touchHandler(a){1<a.touches.length&&a.preventDefault()}document.ontouchmove=function(a){a.preventDefault()};

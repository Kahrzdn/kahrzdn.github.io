float rand(vec2 co) {
    //Note: fract function return de fractional part of a division and dumps the integer part
    return fract(sin(iTime+dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = fragCoord/iResolution.xy;

    // Time varying pixel color
    vec3 col = 0.5 + .5*cos(2001.*iTime+uv.xyx*vec3(0,2,4));

vec4 frag0 = texture(iChannel0,vec2(uv.x,uv.y));
     
     vec4 frag1 = texture(iChannel0,vec2(uv.x+.1*cos(iTime*1.5),uv.y+.1*sin(iTime*1.5)));
     vec4 frag2 = texture(iChannel0,vec2(uv.x+.1*cos(-iTime*2.5),uv.y+.1*sin(-iTime*2.5)));
    // Output to screen
   fragColor = vec4(frag1.r+.1*rand(fragCoord.xy),frag2.r+.1*rand(fragCoord.xy),frag0.r+.1*rand(fragCoord.xy),1.0);
  
}